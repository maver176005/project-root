{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cars: [],\n      stores: [],\n      newCar: {\n        brand: '',\n        model: '',\n        price: '',\n        store_id: ''\n      }\n    };\n  },\n  methods: {\n    async fetchCars() {\n      try {\n        const response = await axios.get('/api/cars');\n        this.cars = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные об автомобилях', error);\n      }\n    },\n    async fetchStores() {\n      try {\n        const response = await axios.get('/api/stores');\n        this.stores = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные о магазинах', error);\n      }\n    },\n    async addCar() {\n      try {\n        const response = await axios.post('/api/cars', this.newCar);\n        this.cars.push(response.data);\n        this.newCar = {\n          brand: '',\n          model: '',\n          price: '',\n          store_id: ''\n        };\n      } catch (error) {\n        console.error('Не удалось добавить автомобиль', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchCars();\n    this.fetchStores();\n  }\n};","map":{"version":3,"names":["axios","data","cars","stores","newCar","brand","model","price","store_id","methods","fetchCars","response","get","error","console","fetchStores","addCar","post","push","mounted"],"sources":["/Users/zeus_olimp/WORK/project-root/frontend/src/views/Cars.vue"],"sourcesContent":["<template>\n  <div class=\"car-container\">\n    <h1>Автомобили</h1>\n    <table>\n      <thead>\n      <tr>\n        <th>Бренд</th>\n        <th>Модель</th>\n        <th>Цена</th>\n        <th>Магазин</th>\n        <th>Телефон</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"car in cars\" :key=\"car.id\">\n        <td>{{ car.brand }}</td>\n        <td>{{ car.model }}</td>\n        <td>{{ car.price }}</td>\n        <td>{{ car.store }}</td>\n        <td>{{ car.phone }}</td>\n      </tr>\n      </tbody>\n    </table>\n\n    <h2>Добавить новый автомобиль</h2>\n    <form @submit.prevent=\"addCar\">\n      <div>\n        <label for=\"brand\">Бренд:</label>\n        <input type=\"text\" id=\"brand\" v-model=\"newCar.brand\" required>\n      </div>\n      <div>\n        <label for=\"model\">Модель:</label>\n        <input type=\"text\" id=\"model\" v-model=\"newCar.model\" required>\n      </div>\n      <div>\n        <label for=\"price\">Цена:</label>\n        <input type=\"number\" id=\"price\" v-model=\"newCar.price\" required>\n      </div>\n      <div>\n        <label for=\"store\">Магазин:</label>\n        <select v-model=\"newCar.store_id\" required>\n          <option v-for=\"store in stores\" :key=\"store.id\" :value=\"store.id\">\n            {{ store.name }}\n          </option>\n        </select>\n      </div>\n      <button type=\"submit\">Добавить автомобиль</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      cars: [],\n      stores: [],\n      newCar: {\n        brand: '',\n        model: '',\n        price: '',\n        store_id: '',\n      },\n    };\n  },\n  methods: {\n    async fetchCars() {\n      try {\n        const response = await axios.get('/api/cars');\n        this.cars = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные об автомобилях', error);\n      }\n    },\n    async fetchStores() {\n      try {\n        const response = await axios.get('/api/stores');\n        this.stores = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные о магазинах', error);\n      }\n    },\n    async addCar() {\n      try {\n        const response = await axios.post('/api/cars', this.newCar);\n        this.cars.push(response.data);\n        this.newCar = {\n          brand: '',\n          model: '',\n          price: '',\n          store_id: '',\n        };\n      } catch (error) {\n        console.error('Не удалось добавить автомобиль', error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchCars();\n    this.fetchStores();\n  },\n};\n</script>\n"],"mappings":"AAoDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,WAAW,CAAC;QAC7C,IAAI,CAACV,IAAG,GAAIS,QAAQ,CAACV,IAAI;MAC3B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,aAAa,CAAC;QAC/C,IAAI,CAACT,MAAK,GAAIQ,QAAQ,CAACV,IAAI;MAC7B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IACD,MAAMG,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAML,QAAO,GAAI,MAAMX,KAAK,CAACiB,IAAI,CAAC,WAAW,EAAE,IAAI,CAACb,MAAM,CAAC;QAC3D,IAAI,CAACF,IAAI,CAACgB,IAAI,CAACP,QAAQ,CAACV,IAAI,CAAC;QAC7B,IAAI,CAACG,MAAK,GAAI;UACZC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE;QACZ,CAAC;MACH,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;EACF,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,SAAS,CAAC,CAAC;IAChB,IAAI,CAACK,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}