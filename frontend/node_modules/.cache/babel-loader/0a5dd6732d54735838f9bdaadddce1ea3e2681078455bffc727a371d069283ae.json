{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      stores: [],\n      showAddStoreForm: false,\n      newStoreName: '',\n      newStorePhone: ''\n    };\n  },\n  methods: {\n    async fetchStores() {\n      try {\n        const response = await axios.get('/api/stores');\n        this.stores = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные о магазинах', error);\n      }\n    },\n    async addStore() {\n      try {\n        const response = await axios.post('/api/stores', {\n          name: this.newStoreName,\n          phone: this.newStorePhone\n        });\n        this.stores.push(response.data);\n        this.showAddStoreForm = false;\n        this.newStoreName = '';\n        this.newStorePhone = '';\n      } catch (error) {\n        console.error('Не удалось добавить магазин', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchStores();\n  }\n};","map":{"version":3,"names":["axios","data","stores","showAddStoreForm","newStoreName","newStorePhone","methods","fetchStores","response","get","error","console","addStore","post","name","phone","push","mounted"],"sources":["/Users/zeus_olimp/WORK/project-root/frontend/src/views/Stores.vue"],"sourcesContent":["<template>\n  <div class=\"store-container\">\n    <h1>Магазины</h1>\n    <table>\n      <thead>\n      <tr>\n        <th>Название магазина</th>\n        <th>Телефон</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"store in stores\" :key=\"store.id\">\n        <td>{{ store.name }}</td>\n        <td>{{ store.phone }}</td>\n      </tr>\n      </tbody>\n    </table>\n    <button @click=\"showAddStoreForm = true\">Добавить магазин</button>\n    <div v-if=\"showAddStoreForm\">\n      <input v-model=\"newStoreName\" placeholder=\"Название магазина\" />\n      <input v-model=\"newStorePhone\" placeholder=\"Телефон\" />\n      <button @click=\"addStore\">Сохранить</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      stores: [],\n      showAddStoreForm: false,\n      newStoreName: '',\n      newStorePhone: '',\n    };\n  },\n  methods: {\n    async fetchStores() {\n      try {\n        const response = await axios.get('/api/stores');\n        this.stores = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные о магазинах', error);\n      }\n    },\n    async addStore() {\n      try {\n        const response = await axios.post('/api/stores', {\n          name: this.newStoreName,\n          phone: this.newStorePhone,\n        });\n        this.stores.push(response.data);\n        this.showAddStoreForm = false;\n        this.newStoreName = '';\n        this.newStorePhone = '';\n      } catch (error) {\n        console.error('Не удалось добавить магазин', error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchStores();\n  },\n};\n</script>\n"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,gBAAgB,EAAE,KAAK;MACvBC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,aAAa,CAAC;QAC/C,IAAI,CAACP,MAAK,GAAIM,QAAQ,CAACP,IAAI;MAC7B,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IACD,MAAME,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMR,KAAK,CAACa,IAAI,CAAC,aAAa,EAAE;UAC/CC,IAAI,EAAE,IAAI,CAACV,YAAY;UACvBW,KAAK,EAAE,IAAI,CAACV;QACd,CAAC,CAAC;QACF,IAAI,CAACH,MAAM,CAACc,IAAI,CAACR,QAAQ,CAACP,IAAI,CAAC;QAC/B,IAAI,CAACE,gBAAe,GAAI,KAAK;QAC7B,IAAI,CAACC,YAAW,GAAI,EAAE;QACtB,IAAI,CAACC,aAAY,GAAI,EAAE;MACzB,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC;EACDO,OAAOA,CAAA,EAAG;IACR,IAAI,CAACV,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}