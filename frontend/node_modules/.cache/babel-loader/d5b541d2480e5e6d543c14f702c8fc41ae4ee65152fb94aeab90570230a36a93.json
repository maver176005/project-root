{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"store-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Магазины\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Название магазина\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Телефон\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stores, store => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: store.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(store.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(store.phone), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showAddStoreForm = true)\n  }, \"Добавить магазин\"), $data.showAddStoreForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newStoreName = $event),\n    placeholder: \"Название магазина\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newStoreName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newStorePhone = $event),\n    placeholder: \"Телефон\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newStorePhone]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.addStore && $options.addStore(...args))\n  }, \"Сохранить\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","stores","store","id","_toDisplayString","name","phone","onClick","_cache","$event","showAddStoreForm","_hoisted_4","newStoreName","placeholder","newStorePhone","args","$options","addStore","_createCommentVNode"],"sources":["/Users/zeus_olimp/WORK/project-root/frontend/src/views/Stores.vue"],"sourcesContent":["<template>\n  <div class=\"store-container\">\n    <h1>Магазины</h1>\n    <table>\n      <thead>\n      <tr>\n        <th>Название магазина</th>\n        <th>Телефон</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"store in stores\" :key=\"store.id\">\n        <td>{{ store.name }}</td>\n        <td>{{ store.phone }}</td>\n      </tr>\n      </tbody>\n    </table>\n    <button @click=\"showAddStoreForm = true\">Добавить магазин</button>\n    <div v-if=\"showAddStoreForm\">\n      <input v-model=\"newStoreName\" placeholder=\"Название магазина\" />\n      <input v-model=\"newStorePhone\" placeholder=\"Телефон\" />\n      <button @click=\"addStore\">Сохранить</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      stores: [],\n      showAddStoreForm: false,\n      newStoreName: '',\n      newStorePhone: '',\n    };\n  },\n  methods: {\n    async fetchStores() {\n      try {\n        const response = await axios.get('/api/stores');\n        this.stores = response.data;\n      } catch (error) {\n        console.error('Не удалось получить данные о магазинах', error);\n      }\n    },\n    async addStore() {\n      try {\n        const response = await axios.post('/api/stores', {\n          name: this.newStoreName,\n          phone: this.newStorePhone,\n        });\n        this.stores.push(response.data);\n        this.showAddStoreForm = false;\n        this.newStoreName = '';\n        this.newStorePhone = '';\n      } catch (error) {\n        console.error('Не удалось добавить магазин', error);\n      }\n    },\n  },\n  mounted() {\n    this.fetchStores();\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;gCAC1BC,mBAAA,CAAiB,YAAb,UAAQ;gCAEVA,mBAAA,CAKQ,gB,aAJRA,mBAAA,CAGK,a,aAFHA,mBAAA,CAA0B,YAAtB,mBAAiB,G,aACrBA,mBAAA,CAAgB,YAAZ,SAAO,E;;EAPnBC,GAAA;AAAA;;uBACEC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,UAAiB,EACjBJ,mBAAA,CAaQ,gBAZNK,UAKQ,EACRL,mBAAA,CAKQ,iB,kBAJRE,mBAAA,CAGKI,SAAA,QAdXC,WAAA,CAW0BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBR,mBAAA,CAGK;MAHwBD,GAAG,EAAES,KAAK,CAACC;QACtCX,mBAAA,CAAyB,YAAAY,gBAAA,CAAlBF,KAAK,CAACG,IAAI,kBACjBb,mBAAA,CAA0B,YAAAY,gBAAA,CAAnBF,KAAK,CAACI,KAAK,iB;sCAItBd,mBAAA,CAAkE;IAAzDe,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,KAAA,CAAAU,gBAAgB;KAAS,kBAAgB,GAC9CV,KAAA,CAAAU,gBAAgB,I,cAA3BhB,mBAAA,CAIM,OAtBViB,UAAA,G,gBAmBMnB,mBAAA,CAAgE;IAnBtE,uBAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmBsBT,KAAA,CAAAY,YAAY,GAAAH,MAAA;IAAEI,WAAW,EAAC;iDAA1Bb,KAAA,CAAAY,YAAY,E,mBAC5BpB,mBAAA,CAAuD;IApB7D,uBAAAgB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBsBT,KAAA,CAAAc,aAAa,GAAAL,MAAA;IAAEI,WAAW,EAAC;iDAA3Bb,KAAA,CAAAc,aAAa,E,GAC7BtB,mBAAA,CAA4C;IAAnCe,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,WAAS,E,KArBzCG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}